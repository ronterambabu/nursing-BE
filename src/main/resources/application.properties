# ---------------------------
# App Info
# ---------------------------
spring.application.name=renewable

# ---------------------------
# PostgreSQL (via Supabase PgBouncer)
# ---------------------------
spring.datasource.url=jdbc:postgresql://aws-0-ap-south-1.pooler.supabase.com:6543/postgres?sslmode=require&prepareThreshold=0
spring.datasource.username=postgres.aloohtnrnilbuidiscgq
spring.datasource.password=Rambabu@1
spring.datasource.driver-class-name=org.postgresql.Driver

# ---------------------------
# Stripe Configuration (Development)
# ---------------------------
stripe.api.secret.key=${STRIPE_SECRET_KEY:sk_test_default_key_for_dev}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET:whsec_default_webhook_secret_for_dev}

# ---------------------------
# HikariCP Connection Pool
# ---------------------------
spring.datasource.hikari.pool-name=SupabasePgBouncerPool
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=10000
spring.datasource.hikari.connection-timeout=2000

# ---------------------------
# JPA / Hibernate
# ---------------------------
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ---------------------------
# Supabase Storage
# ---------------------------
supabase.url=https://aloohtnrnilbuidiscgq.supabase.co
supabase.api.key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
supabase.bucket=formdocs

# ---------------------------
# JWT Security Configuration
# ---------------------------
jwt.secret=MyJwtSecretKeyForRenewableApplicationShouldBeAtLeast256BitsLongForHS256Algorithm
jwt.expiration=86400000


server.port=8901

# ---------------------------
# SSL/HTTPS Configuration  
# ---------------------------
# Enable SSL (uncomment when you have certificates)
# server.ssl.enabled=true
# server.ssl.key-store=classpath:keystore.p12
# server.ssl.key-store-password=changeit
# server.ssl.key-store-type=PKCS12
# server.ssl.key-alias=renewable

# Force HTTPS in production (behind reverse proxy)
server.forward-headers-strategy=framework
server.use-forward-headers=true

# Security headers for HTTPS
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict




# ---------------------------
# Spring Security Configuration
# ---------------------------
# Enable method-level security
spring.security.enable-global-method-security=true

# Logging for security events
logging.level.org.springframework.security=INFO
logging.level.com.zn.payment.controller.PaymentRecordController=INFO

